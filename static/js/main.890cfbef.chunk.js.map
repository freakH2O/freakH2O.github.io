{"version":3,"sources":["App.js","index.js"],"names":["mapStyles","width","height","App","route","fetch","state","min","max","then","response","json","data","setState","info","show","handleMin","e","console","log","target","value","handleMax","onMarkerClick","props","marker","activeInfo","img","src","activeMarker","showingInfoWindow","Displayable","id","onChange","placeholder","style","marginTop","Button","onClick","variant","google","zoom","initialCenter","lat","lng","map","pos","location","title","name","position","visible","this","className","React","Component","GoogleApiWrapper","apiKey","ReactDOM","render","document","getElementById"],"mappings":"ySAOMA,EAAY,CAChBC,MAAO,OACPC,OAAQ,QAKGC,EAAb,YAEE,aAAe,IAAD,8BACZ,+CAQFC,MAAQ,WACNC,MAAM,8BAAgC,EAAKC,MAAMC,IAAM,QAAU,EAAKD,MAAME,KACzEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,MAAM,QAZtC,EAcdC,UAAY,SAACC,GACXC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKR,SAAS,CAAEN,IAAKU,EAAEG,OAAOC,SAhBlB,EAkBdC,UAAY,SAACL,GACX,EAAKJ,SAAS,CAAEL,IAAKS,EAAEG,OAAOC,SAnBlB,EAsBdE,cAAgB,SAACC,EAAOC,EAAQR,GAAhB,OACd,EAAKJ,SAAS,CACZa,WAAYF,EAAMV,KAClBa,IAAKH,EAAMI,IACXC,aAAcJ,EACdK,mBAAmB,KA3BT,EA+BdC,YAAc,WACZ,OAAwB,IAApB,EAAKzB,MAAMS,KACN,6BACL,2CACA,2BAAOiB,GAAG,MAAMC,SAAU,EAAKjB,UAAWkB,YAAY,kBAAkBC,MAAO,CAAEC,UAAW,UAC5F,6BACA,2BAAOJ,GAAG,MAAMC,SAAU,EAAKX,UAAWY,YAAY,kBAAkBC,MAAO,CAAEC,UAAW,UAC5F,6BACA,6BACA,kBAACC,EAAA,EAAD,CAAQC,QAAS,EAAKlC,MAAOmC,QAAQ,QAArC,UAIK,6BACL,kBAAE,MAAF,CAAMC,OAAQ,EAAKhB,MAAMgB,OAAQC,KAAM,GAAIN,MAAOnC,EAAW0C,cAAe,CAAEC,IAAK,UAAWC,KAAM,YACjG,EAAKtC,MAAMQ,KAAK+B,KAAI,SAACpB,GACpB,IAAIqB,EAAI,CAAC,IAAMrB,EAAOsB,SAAS,GAAG,IAAMtB,EAAOsB,SAAS,IACxD,OAAO,kBAAC,SAAD,CACLT,QAAS,EAAKf,cACdK,IAAKH,EAAOG,IACZd,KAAMW,EAAOX,KACbkC,MAAM,GACNC,KAAMxB,EAAOwB,KACbC,SAAWJ,OAKf,kBAAC,SAAD,CACEE,MAAO,+CACPlC,KAAM,eACNwB,QAAS,EAAKf,cACd2B,SAAU,CAAEP,IAAK,UAAWC,KAAM,cACpC,kBAAC,aAAD,CACEnB,OAAQ,EAAKnB,MAAMuB,aACnBsB,QAAS,EAAK7C,MAAMwB,mBACpB,6BACE,4BAAK,EAAKxB,MAAMoB,YAChB,yBAAKS,MAAO,CAAElC,MAAO,QAASC,OAAQ,SAAW0B,IAAK,EAAKtB,MAAMqB,WAnE3E,EAAKrB,MAAQ,CAAES,MAAM,EAAMR,IAAK,EAAGC,IAAK,EAAGM,KAAM,CAAC,IAAI,IAF1C,EAFhB,kFASII,QAAQC,IAAIiC,KAAK9C,MAAMQ,QAT3B,+BAsFI,OACE,yBAAKuC,UAAU,OACb,uBAAMtB,YAAN,WAxFR,GAAyBuB,IAAMC,WAgGhBC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZrD,GC3GHuD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.890cfbef.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\n\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n\n\nexport class App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = { show: true, min: 0, max: 0, info: [\"a\",0] }\n  }\n\n  componentDidUpdate()\n  {\n    console.log(this.state.info)\n  }\n  route = () => {\n    fetch(\"http://localhost:5000/?min=\" + this.state.min + \"&max=\" + this.state.max)\n      .then(response => response.json())\n      .then(data => this.setState({ info: data, show: false }))\n  }\n  handleMin = (e) => {\n    console.log(e.target.value)\n    this.setState({ min: e.target.value })\n  }\n  handleMax = (e) => {\n    this.setState({ max: e.target.value })\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      activeInfo: props.info,\n      img: props.src,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n\n  Displayable = () => {\n    if (this.state.show === true) {\n      return <div>\n        <h1>FOOD ROUTER</h1>\n        <input id=\"min\" onChange={this.handleMin} placeholder=\"Enter Min Price\" style={{ marginTop: \"20px\" }} />\n        <br></br>\n        <input id=\"max\" onChange={this.handleMax} placeholder=\"Enter Max Price\" style={{ marginTop: \"20px\" }} />\n        <br></br>\n        <br></br>\n        <Button onClick={this.route} variant=\"dark\">ROUTE</Button>\n      </div>\n    }\n    else {\n      return <div>\n        < Map google={this.props.google} zoom={14} style={mapStyles} initialCenter={{ lat: 37.778519, lng: -122.405640 }}>\n          {this.state.info.map((marker) => {\n            let pos={\"lat\":marker.location[0],\"lng\":marker.location[1]}\n            return <Marker\n              onClick={this.onMarkerClick}\n              src={marker.src}\n              info={marker.info}\n              title=\"\"\n              name={marker.name}\n              position= {pos}\n            />\n          })}\n\n\n          <Marker\n            title={'The marker`s title will appear as a tooltip.'}\n            info={'RESTAURANT 1'}\n            onClick={this.onMarkerClick}\n            position={{ lat: 37.778519, lng: -122.4088640 }} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <div>\n              <h4>{this.state.activeInfo}</h4>\n              <img style={{ width: \"350px\", height: \"350px\" }} src={this.state.img}></img>\n            </div>\n          </InfoWindow>\n\n        </ Map>\n\n\n      </div>\n    }\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <this.Displayable></this.Displayable>\n      </div>\n    );\n  }\n}\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC6BrTtbUsJxdWJuRPI99wOs_6hXa_WhdU'\n})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}